#!/usr/bin/env bash
# Script to configure Nginx server on Ubuntu 20.04 LTS

# Check if Nginx is installed
if ! command -v nginx &> /dev/null; then
    echo "Error: Nginx is not installed. Please install Nginx and try again."
    exit 1
fi

# Stop Nginx service if it's running
echo "Stopping Nginx service if it's running..."
sudo service nginx stop
echo "Nginx service stopped."

# Ensure no service is using port 80
echo "Checking if port 80 is in use..."
if sudo lsof -i:80 &> /dev/null; then
    echo "Port 80 is in use. Stopping any processes using port 80..."
    sudo lsof -i:80 -t | xargs -r sudo kill -9
    echo "Processes using port 80 stopped."
fi

echo "Verifying port 80 is not in use..."
if ss -tuln | grep -q ':80\s'; then
    echo "Error: Port 80 is still in use by another service."
    exit 1
fi

# Start Nginx service if it's not running
if ! pgrep nginx &> /dev/null; then
    echo "Starting Nginx service..."
    sudo service nginx start
    echo "Nginx service started."
fi

# Remove any existing custom configurations
echo "Removing existing custom configurations..."
sudo rm -f /etc/nginx/sites-enabled/*
sudo rm -f /etc/nginx/sites-available/*
echo "Existing custom configurations removed."

# Remove any existing HTML files in the web root
echo "Removing existing files in the web root..."
sudo rm -f /var/www/html/*
echo "Existing files in the web root removed."

# Ensure the default Nginx index page is present and contains the expected content
default_page='/var/www/html/index.nginx-debian.html'
default_content='<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>'

# Write the default content to the file
echo "Writing default Nginx index page..."
echo "$default_content" | sudo tee "$default_page" > /dev/null
echo "Default Nginx index page written."

# Configure Nginx to listen on port 80 for all IPv4 and IPv6 addresses
echo "Configuring Nginx to listen on port 80..."
sudo tee /etc/nginx/sites-available/default > /dev/null << 'EOF'
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name _;

    location / {
        try_files $uri $uri/ =404;
    }
}
EOF
echo "Nginx configured to listen on port 80."

# Enable the default site by creating a symbolic link
echo "Enabling the default site..."
sudo ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Test the Nginx configuration
echo "Testing Nginx configuration..."
sudo nginx -t

# Reload Nginx to apply changes
echo "Reloading Nginx..."
sudo service nginx reload
echo "Nginx reloaded."

# Test if Nginx serves the default page correctly on port 80
echo "Testing if Nginx serves the default page correctly on port 80..."
response_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost)
if [[ $response_code -eq 200 ]]; then
    echo "Nginx is serving the default page correctly on port 80."
else
    echo "Error: Nginx is not serving the default page correctly on port 80. HTTP response code: $response_code"
fi

# Print the content of the default page to verify
echo "Printing the content of the default page..."
curl http://localhost
